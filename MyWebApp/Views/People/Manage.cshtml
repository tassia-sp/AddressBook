@model MyWebApp.Models.ViewModels.ItemViewModel<int?>
@{
    ViewBag.Title = "Manage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input class="hidden" value="@Model.Item" id="personId" />
<h2 style="padding-top:30px; text-align: center">Manage</h2>
<div class="container-fluid" ng-controller="peopleController as ctrl">
    <form name="personForm" id="personForm" role="form" novalidate>
        <div class="form-group">
            <label class="col-form-label col-form-label-lg" for="firstName">First Name</label>
            <input class="form-control form-control-lg" type="text" ng-model="ctrl.item.firstName" id="firstName">
        </div>
        <div class="form-group">
            <label class="col-form-label col-form-label-lg" for="lastName">Last Name</label>
            <input class="form-control form-control-lg" ng-model="ctrl.item.lastName" type="text" id="lastName">
        </div>
        <div class="form-group">
            <label class="col-form-label col-form-label-lg" for="email">Email</label>
            <input class="form-control form-control-lg" type="text" ng-model="ctrl.item.email" id="email" />
        </div>
        <div class="form-group" ng-class="{ 'has-error' : personForm.favorite.$error.required && personForm.favorite.$touched}">
            <label for="favorite" class="col-form-label col-form-label-lg">Favorite</label>
            <select class="form-control form-control-lg" id="favorite" name="favorite"
                    ng-model="ctrl.item.favoriteString"
                    ng-options="option as option for option in ctrl.options" required>
                <option value="">Select Yes or No</option>
            </select>
            <p class="help-block" ng-show="personForm.recommended.$error.required && personForm.recommended.$touched">Required</p>
        </div>
        <button type="submit" class="btn btn-primary" ng-click="ctrl.submit(item)">Submit</button>
    </form>
</div>

@section scripts{
<script type="text/javascript">
(function () {
        angular.module("myWebApp")
            .factory('$peopleService', PeopleService)

        PeopleService.$inject = ['$http'];

        function PeopleService($http) {
            return {
                postPeople: _postPeople,
                getPeople: _getPeople
            };

            function _postPeople() {
                console.log("posting people...");
                return $http.get('/api/people')
                    .then(onSuccessPostPeople, data)
                    .catch(onError);
            }

            function onSuccessPostPeople(response) {
                console.log("In PeopleService.onSuccessPostPeople()");
                return response.data;
            }

            function _getPeople() {
                console.log("getting people...");
                return $http.get('/api/people')
                    .then(onSuccessGetPeople)
                    .catch(onError);
            }

            function onSuccessGetPeople(response) {
                console.log("In onSuccessGetPeople");
                return response.data;
            }

            function onError() {
                console.log("In PeopleService.onError()");
            }
        }
    })();
</script>
<script type="text/javascript">
    (function () {
        angular.module('myWebApp')
            .controller("peopleController", PeopleController)
        PeopleController.$inject = ['$scope', '$peopleService'];

        function PeopleController($scope, $peopleService) {
            var vm = this;
            vm.$scope = $scope;
            vm.$peopleService = $peopleService;

            vm.item = null;
            vm.id = $("#personId").val();
            vm.getPeople = _getPeople;
            vm.postPerson = _postPerson;
            vm.submit = _submit;
            vm.options = ["Yes", "No"];


            render();

            function render() {
                console.log("rendering...")
                return vm.getPeople()
                    .then(onCompleteGetPerson);
            }

            function _postPerson(data) {
                return $peopleService.createPerson(data)
                    .then(getPKId);
            }

            function fillPKId(data) {
                console.log("In fillPKId()", data);
                vm.id = data;
            }

            function onCompleteGetPerson() {
                console.log("on complete get people");
            }

            function _submit(item) {
                if (vm.id) {
                    //this is an edit so submit a PUT request

                }
            }

        }
    })();

</script>
}